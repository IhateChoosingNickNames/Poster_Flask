"""empty message

Revision ID: 17eaa506ef41
Revises: 
Create Date: 2023-05-29 21:53:45.805716

"""
import flask_security
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '17eaa506ef41'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('slug', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Groups')),
    sa.UniqueConstraint('slug', name=op.f('uq_Groups_slug'))
    )
    op.create_table('Tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('slug', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Tags')),
    sa.UniqueConstraint('slug', name=op.f('uq_Tags_slug'))
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('permissions', flask_security.datastore.AsaList(), nullable=True),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('slug', sa.String(length=50), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('fs_webauthn_user_handle', sa.String(length=64), nullable=True),
    sa.Column('mf_recovery_codes', flask_security.datastore.AsaList(), nullable=True),
    sa.Column('us_phone_number', sa.String(length=128), nullable=True),
    sa.Column('us_totp_secrets', sa.Text(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=64), nullable=True),
    sa.Column('current_login_ip', sa.String(length=64), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('tf_primary_method', sa.String(length=64), nullable=True),
    sa.Column('tf_totp_secret', sa.String(length=255), nullable=True),
    sa.Column('tf_phone_number', sa.String(length=128), nullable=True),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('fs_uniquifier', name=op.f('uq_user_fs_uniquifier')),
    sa.UniqueConstraint('fs_webauthn_user_handle', name=op.f('uq_user_fs_webauthn_user_handle')),
    sa.UniqueConstraint('slug', name=op.f('uq_user_slug')),
    sa.UniqueConstraint('us_phone_number', name=op.f('uq_user_us_phone_number')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    op.create_table('Posts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('text', sa.String(length=500), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_Posts_author_id_user')),
    sa.ForeignKeyConstraint(['group_id'], ['Groups.id'], name=op.f('fk_Posts_group_id_Groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Posts')),
    sa.UniqueConstraint('slug', name=op.f('uq_Posts_slug'))
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_roles_users_role_id_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_roles_users_user_id_user'))
    )
    op.create_table('Comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('text', sa.String(length=500), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_Comments_author_id_user')),
    sa.ForeignKeyConstraint(['post_id'], ['Posts.id'], name=op.f('fk_Comments_post_id_Posts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Comments'))
    )
    op.create_table('posts_tags',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['Posts.id'], name=op.f('fk_posts_tags_post_id_Posts')),
    sa.ForeignKeyConstraint(['tag_id'], ['Tags.id'], name=op.f('fk_posts_tags_tag_id_Tags'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('posts_tags')
    op.drop_table('Comments')
    op.drop_table('roles_users')
    op.drop_table('Posts')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('Tags')
    op.drop_table('Groups')
    # ### end Alembic commands ###
